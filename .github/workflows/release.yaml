name: Release

on:
    pull_request:
        types:
            - closed
        branches:
            - 'main'

permissions:
    contents: write

jobs:
    generate-release:
        name: Release
        if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'SemVer.major') || contains(github.event.pull_request.labels.*.name, 'SemVer.minor') || contains(github.event.pull_request.labels.*.name, 'SemVer.patch'))
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Get Previous tag
              id: previoustag
              uses: 'WyriHaximus/github-action-get-previous-tag@v1'

            - name: Get next versions
              id: semvers
              uses: 'WyriHaximus/github-action-next-semvers@v1'
              with:
                  version: ${{ steps.previoustag.outputs.tag }}

            - name: Update major version
              if: ${{ contains(github.event.pull_request.labels.*.name, 'SemVer.major') }}
              run: echo "NEW_VERSION=${{ steps.semvers.outputs.major }}" >> $GITHUB_ENV

            - name: Update minor version
              if: ${{ contains(github.event.pull_request.labels.*.name, 'SemVer.minor') }}
              run: echo "NEW_VERSION=${{ steps.semvers.outputs.minor }}" >> $GITHUB_ENV

            - name: Update patch version
              if: ${{ contains(github.event.pull_request.labels.*.name, 'SemVer.patch') }}
              run: echo "NEW_VERSION=${{ steps.semvers.outputs.patch }}" >> $GITHUB_ENV

            - name: Upload Release
              uses: ncipollo/release-action@v1
              with:
                  body: ${{ github.event.pull_request.body }}
                  tag: ${{ env.NEW_VERSION }}
                  token: ${{ secrets.GITHUB_TOKEN }}

    docker:
        name: Generate and Push Docker image
        runs-on: ubuntu-latest
        needs:
            - generate-release
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: |
                      testadirapa/homunculus-desk:${{ env.NEW_VERSION }}
                      testadirapa/homunculus-desk:latest
